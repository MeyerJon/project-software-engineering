.TH "TiXmlUnknown" 3 "Wed Mar 22 2017" "Version 1.0" "Metronet" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TiXmlUnknown
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <tinyxml\&.h>\fP
.PP
Inherits \fBTiXmlNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTiXmlUnknown\fP ()"
.br
.ti -1c
.RI "virtual \fB~TiXmlUnknown\fP ()"
.br
.ti -1c
.RI "\fBTiXmlUnknown\fP (const \fBTiXmlUnknown\fP &copy)"
.br
.ti -1c
.RI "\fBTiXmlUnknown\fP & \fBoperator=\fP (const \fBTiXmlUnknown\fP &copy)"
.br
.ti -1c
.RI "virtual \fBTiXmlNode\fP * \fBClone\fP () const"
.br
.RI "Creates a copy of this Unknown and returns it\&. "
.ti -1c
.RI "virtual void \fBPrint\fP (FILE *cfile, int depth) const"
.br
.ti -1c
.RI "virtual const char * \fBParse\fP (const char *p, \fBTiXmlParsingData\fP *data, \fBTiXmlEncoding\fP encoding)"
.br
.ti -1c
.RI "virtual const \fBTiXmlUnknown\fP * \fBToUnknown\fP () const"
.br
.RI "Cast to a more defined type\&. Will return null not of the requested type\&. "
.ti -1c
.RI "virtual \fBTiXmlUnknown\fP * \fBToUnknown\fP ()"
.br
.RI "Cast to a more defined type\&. Will return null not of the requested type\&. "
.ti -1c
.RI "virtual bool \fBAccept\fP (\fBTiXmlVisitor\fP *content) const"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBCopyTo\fP (\fBTiXmlUnknown\fP *target) const"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
Any tag that tinyXml doesn't recognize is saved as an unknown\&. It is a tag of text, but should not be modified\&. It will be written back to the XML, unchanged, when the file is saved\&.
.PP
DTD tags get thrown into TiXmlUnknowns\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "TiXmlUnknown::TiXmlUnknown ()\fC [inline]\fP"

.SS "virtual TiXmlUnknown::~TiXmlUnknown ()\fC [inline]\fP, \fC [virtual]\fP"

.SS "TiXmlUnknown::TiXmlUnknown (const \fBTiXmlUnknown\fP & copy)\fC [inline]\fP"

.SH "Member Function Documentation"
.PP 
.SS "bool TiXmlUnknown::Accept (\fBTiXmlVisitor\fP * content) const\fC [virtual]\fP"
Walk the XML tree visiting this node and all of its children\&. 
.PP
Implements \fBTiXmlNode\fP\&.
.SS "\fBTiXmlNode\fP * TiXmlUnknown::Clone () const\fC [virtual]\fP"

.PP
Creates a copy of this Unknown and returns it\&. 
.PP
Implements \fBTiXmlNode\fP\&.
.SS "void TiXmlUnknown::CopyTo (\fBTiXmlUnknown\fP * target) const\fC [protected]\fP"

.SS "\fBTiXmlUnknown\fP& TiXmlUnknown::operator= (const \fBTiXmlUnknown\fP & copy)\fC [inline]\fP"

.SS "const char * TiXmlUnknown::Parse (const char * p, \fBTiXmlParsingData\fP * data, \fBTiXmlEncoding\fP encoding)\fC [virtual]\fP"

.PP
Implements \fBTiXmlBase\fP\&.
.SS "void TiXmlUnknown::Print (FILE * cfile, int depth) const\fC [virtual]\fP"
All TinyXml classes can print themselves to a filestream or the string class (\fBTiXmlString\fP in non-STL mode, std::string in STL mode\&.) Either or both cfile and str can be null\&.
.PP
This is a formatted print, and will insert tabs and newlines\&.
.PP
(For an unformatted stream, use the << operator\&.) 
.PP
Implements \fBTiXmlBase\fP\&.
.SS "virtual const \fBTiXmlUnknown\fP* TiXmlUnknown::ToUnknown () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Cast to a more defined type\&. Will return null not of the requested type\&. 
.PP
Reimplemented from \fBTiXmlNode\fP\&.
.SS "virtual \fBTiXmlUnknown\fP* TiXmlUnknown::ToUnknown ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Cast to a more defined type\&. Will return null not of the requested type\&. 
.PP
Reimplemented from \fBTiXmlNode\fP\&.

.SH "Author"
.PP 
Generated automatically by Doxygen for Metronet from the source code\&.
