.TH "Station" 3 "Fri Apr 28 2017" "Version 1.0" "Metronet" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Station \- \fBStation\fP klasse die een STATION element uit een XML-bestand representeert\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Station\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBStation\fP ()"
.br
.RI "\fIDe lege constructor van de klasse \fBStation\fP\&. \fP"
.ti -1c
.RI "\fBStation\fP (std::string n, std::string typeNaam, std::map< int, std::string > vorigeStations, std::map< int, std::string > volgendeStations)"
.br
.RI "\fIDe default constructor van de klasse \fBStation\fP\&. \fP"
.ti -1c
.RI "bool \fBproperlyInitialised\fP () const "
.br
.RI "\fIKijk na of de constructor in de juiste staat geeindigd is\&. \fP"
.ti -1c
.RI "bool \fBbevatSpoor\fP (int spoor) const "
.br
.RI "\fICheckt of het station een spoor bevat\&. \fP"
.ti -1c
.RI "std::string \fBgetNaam\fP () const "
.br
.RI "\fIGeef de naam terug van het station\&. \fP"
.ti -1c
.RI "std::string \fBgetType\fP () const "
.br
.RI "\fIGeeft het station type terug\&. \fP"
.ti -1c
.RI "std::string \fBgetVorige\fP (int spoor) const "
.br
.RI "\fIGeef het vorig station op een spoor\&. \fP"
.ti -1c
.RI "std::string \fBgetVolgende\fP (int spoor) const "
.br
.RI "\fIGeef het volgende station op een spoor\&. \fP"
.ti -1c
.RI "std::vector< int > \fBgetSporen\fP () const "
.br
.RI "\fIGeef de sporen\&. \fP"
.ti -1c
.RI "bool \fBisHalte\fP () const "
.br
.RI "\fIGeeft aan of het station een halte is\&. \fP"
.ti -1c
.RI "bool \fBisMetrostation\fP () const "
.br
.RI "\fIGeeft aan of het station een metrostation is\&. \fP"
.ti -1c
.RI "bool \fBspoorBezet\fP (int spoor) const "
.br
.RI "\fIGeeft aan of er zich op het gegeven spoor een tram bevindt\&. \fP"
.ti -1c
.RI "void \fBbezetSpoor\fP (int spoor, bool isTramHier)"
.br
.RI "\fIBezet het spoor met de gegeven tram\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\fBStation\fP klasse die een STATION element uit een XML-bestand representeert\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Station::Station ()"

.PP
De lege constructor van de klasse \fBStation\fP\&. 
.PP
\fBPostcondition:\fP
.RS 4
ENSURE(this->\fBproperlyInitialised()\fP, 'Station is niet in de juiste staat geëindigd na aanroep van de constructor\&.'); 
.RE
.PP

.SS "Station::Station (std::string n, std::string typeNaam, std::map< int, std::string > vorigeStations, std::map< int, std::string > volgendeStations)"

.PP
De default constructor van de klasse \fBStation\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIn\fP De naam van het station 
.br
\fItypeNaam\fP Het station type in string vorm, wordt omgezet naar StationType 
.br
\fIvorigeStations\fP Map met als key het spoor en als value de vorige station 
.br
\fIvolgendeStations\fP Map met als key het spoor en als value de volgende station 
.RE
.PP
\fBPostcondition:\fP
.RS 4
ENSURE(this->\fBproperlyInitialised()\fP, 'Station is niet in de juiste staat geëindigd na aanroep van de constructor\&.'); 
.RE
.PP

.SH "Member Function Documentation"
.PP 
.SS "bool Station::bevatSpoor (int spoor) const"

.PP
Checkt of het station een spoor bevat\&. 
.PP
\fBParameters:\fP
.RS 4
\fIspoor\fP Het spoor dat beschouwd moet worden\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Een bool die weergeeft of het station het spoor bevat\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij aanroep van bevatSpoor\&.'); 
.RE
.PP

.SS "void Station::bezetSpoor (int spoor, bool isTramHier)"

.PP
Bezet het spoor met de gegeven tram\&. 
.PP
\fBParameters:\fP
.RS 4
\fIspoor\fP Het spoor waarop de tram gezet moet worden 
.br
\fIisTramHier\fP De boolean die zegt of de tram aanwezig is op het spoor\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij de aanroep van bezetSpoor\&.'); 
.PP
REQUIRE(bevatSpoor(spoor), 'Station bevat het gegeven spoor niet bij aanroep van bezetSpoor\&.'); 
.RE
.PP
\fBPostcondition:\fP
.RS 4
ENSURE(spoorBezet(spoor) == isTramHier, 'Spoor was niet correct bezet na aanroep van bezetSpoor'); 
.RE
.PP

.SS "std::string Station::getNaam () const"

.PP
Geef de naam terug van het station\&. 
.PP
\fBReturns:\fP
.RS 4
De naam van het station\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij de aanroep van getNaam\&.'); 
.RE
.PP

.SS "std::vector< int > Station::getSporen () const"

.PP
Geef de sporen\&. 
.PP
\fBReturns:\fP
.RS 4
De sporen\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij de aanroep van getSporen\&.'); 
.RE
.PP

.SS "std::string Station::getType () const"

.PP
Geeft het station type terug\&. 
.PP
\fBReturns:\fP
.RS 4
String 'Albatros' of 'PCC' 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij de aanroep van getType\&.'); 
.RE
.PP

.SS "std::string Station::getVolgende (int spoor) const"

.PP
Geef het volgende station op een spoor\&. 
.PP
\fBReturns:\fP
.RS 4
Het volgende station\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij de aanroep van getVolgende\&.'); 
.PP
REQUIRE(bevatSpoor(spoor), 'Station bevat spoor niet bij aanroep getVolgende\&.'); 
.RE
.PP

.SS "std::string Station::getVorige (int spoor) const"

.PP
Geef het vorig station op een spoor\&. 
.PP
\fBReturns:\fP
.RS 4
Het vorig station\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij de aanroep van getVorige\&.'); 
.PP
REQUIRE(bevatSpoor(spoor), 'Station bevat spoor niet bij aanroep van getVorige\&.'); 
.RE
.PP

.SS "bool Station::isHalte () const"

.PP
Geeft aan of het station een halte is\&. 
.PP
\fBReturns:\fP
.RS 4
Een bool die aangeeft of het station een halte is 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij de aanroep van isHalte\&.'); 
.RE
.PP

.SS "bool Station::isMetrostation () const"

.PP
Geeft aan of het station een metrostation is\&. 
.PP
\fBReturns:\fP
.RS 4
Een bool die aangeeft of het station een halte is 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij de aanroep van isMetrostation\&.'); 
.RE
.PP

.SS "bool Station::properlyInitialised () const"

.PP
Kijk na of de constructor in de juiste staat geeindigd is\&. 
.PP
\fBReturns:\fP
.RS 4
Boolean die aangeeft of het object juist geinitialiseerd is\&. 
.RE
.PP

.SS "bool Station::spoorBezet (int spoor) const"

.PP
Geeft aan of er zich op het gegeven spoor een tram bevindt\&. 
.PP
\fBParameters:\fP
.RS 4
\fIspoor\fP Het gegeven spoor\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij de aanroep van spoorBezet\&.'); 
.PP
REQUIRE(bevatSpoor(spoor), 'Station bevat het gegeven spoor niet bij aanroep van spoorBezet\&.'); 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Metronet from the source code\&.
