.TH "Metronet" 3 "Fri Apr 28 2017" "Version 1.0" "Metronet" \" -*- nroff -*-
.ad l
.nh
.SH NAME
Metronet \- \fBMetronet\fP klasse die XML bestanden inleest, de consistentie hiervan nagaat en Trams en Stations bijhoudt\&.  

.SH SYNOPSIS
.br
.PP
.PP
\fC#include <Metronet\&.h>\fP
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBMetronet\fP ()"
.br
.RI "\fIDe lege constructor van de klasse \fBMetronet\fP\&. \fP"
.ti -1c
.RI "\fBMetronet\fP (\fBExporter\fP *exp)"
.br
.RI "\fIDe default constructor van de klasse \fBMetronet\fP\&. \fP"
.ti -1c
.RI "virtual \fB~Metronet\fP ()"
.br
.RI "\fIDe destructor van de klasse \fBMetronet\fP\&. \fP"
.ti -1c
.RI "\fBMetronet\fP & \fBoperator=\fP (const \fBMetronet\fP &rhs)"
.br
.RI "\fIDe overload van de = operator van de klasse \fBMetronet\fP\&. \fP"
.ti -1c
.RI "bool \fBproperlyInitialised\fP ()"
.br
.RI "\fIKijk na of de constructor in de juiste staat geeindigd is\&. \fP"
.ti -1c
.RI "std::map< std::string, \fBStation\fP * > \fBgetStations\fP ()"
.br
.RI "\fIGeeft alle stations in het metronet terug\&. \fP"
.ti -1c
.RI "std::map< int, \fBTram\fP * > & \fBgetTrams\fP ()"
.br
.RI "\fIGeeft alle trams in het metronet terug\&. \fP"
.ti -1c
.RI "std::map< std::string, \fBPassagier\fP * > & \fBgetPassagiers\fP ()"
.br
.RI "\fIGeeft alle passagiers in het metronet terug\&. \fP"
.ti -1c
.RI "bool \fBbevatTram\fP (\fBTram\fP *tram)"
.br
.RI "\fIKijkt na of het metronet de opgegeven tram bevat\&. \fP"
.ti -1c
.RI "bool \fBbevatStation\fP (\fBStation\fP *station)"
.br
.RI "\fIKijkt na of het metronet de opgegeven tram bevat\&. \fP"
.ti -1c
.RI "bool \fBbevatSpoor\fP (int spoor)"
.br
.RI "\fIKijkt na of het metronet de opgegeven tram bevat\&. \fP"
.ti -1c
.RI "bool \fBbevatPassagier\fP (\fBPassagier\fP *pas)"
.br
.RI "\fIKijkt na of het metronet de opgegeven passagier bevat\&. \fP"
.ti -1c
.RI "void \fBaddStation\fP (std::string naam, std::string type, std::map< int, std::string > vorigeStations, std::map< int, std::string > volgendeStations)"
.br
.RI "\fIVoegt station toe aan metronet\&. \fP"
.ti -1c
.RI "void \fBaddTram\fP (int zitplaatsen, int snelheid, int spoor, int voertuigNr, std::string type, std::string beginStation)"
.br
.RI "\fIVoegt tram toe aan metronet\&. \fP"
.ti -1c
.RI "void \fBaddSpoor\fP (int spoor)"
.br
.RI "\fIVoegt spoor toe aan metronet\&. \fP"
.ti -1c
.RI "void \fBaddPassagier\fP (std::string naam, std::string beginStation, std::string eindStation, int hoeveelheid)"
.br
.RI "\fIVoegt een passagier toe aan het metronet\&. \fP"
.ti -1c
.RI "bool \fBcheckConsistent\fP (std::ostream &os)"
.br
.RI "\fIKijkt na of het metronet consistent is\&. \fP"
.ti -1c
.RI "void \fBprintMetronet\fP (std::ostream &os)"
.br
.RI "\fIPrint het hele metronet\&. \fP"
.ti -1c
.RI "int \fBopstappenAfstappen\fP (\fBTram\fP *tram, std::ostream &os)"
.br
.RI "\fIBehandelt het opstappen en afstappen van passagiers\&. \fP"
.ti -1c
.RI "void \fBrondrijden\fP (std::ostream &os)"
.br
.RI "\fIEmuleert het rondrijden van trams\&. \fP"
.ti -1c
.RI "bool \fBtramMagVertrekken\fP (\fBTram\fP *tram)"
.br
.RI "\fIKijkt of de gegeven tram verder mag rijden\&. \fP"
.ti -1c
.RI "void \fBreset\fP ()"
.br
.RI "\fIReset heel het systeem\&. \fP"
.in -1c
.SH "Detailed Description"
.PP 
\fBMetronet\fP klasse die XML bestanden inleest, de consistentie hiervan nagaat en Trams en Stations bijhoudt\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "Metronet::Metronet ()"

.PP
De lege constructor van de klasse \fBMetronet\fP\&. 
.PP
\fBPostcondition:\fP
.RS 4
ENSURE(this->\fBproperlyInitialised()\fP, 'Metronet is niet in de juiste staat geëindigd na aanroep van de constructor\&.'); 
.RE
.PP

.SS "Metronet::Metronet (\fBExporter\fP * exp)"

.PP
De default constructor van de klasse \fBMetronet\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIexp\fP De exporter die gebruikt zal worden door \fBMetronet\fP om output te genereren 
.RE
.PP
\fBPostcondition:\fP
.RS 4
ENSURE(this->\fBproperlyInitialised()\fP, 'Metronet is niet in de juiste staat geëindigd na aanroep van de constructor\&.'); 
.RE
.PP

.SS "Metronet::~Metronet ()\fC [virtual]\fP"

.PP
De destructor van de klasse \fBMetronet\fP\&. 
.SH "Member Function Documentation"
.PP 
.SS "void Metronet::addPassagier (std::string naam, std::string beginStation, std::string eindStation, int hoeveelheid)"

.PP
Voegt een passagier toe aan het metronet\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpas\fP De passagier die toegevoegd zal worden 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij de aanroep van addPassagier\&.'); 
.PP
REQUIRE(pas->\fBproperlyInitialised()\fP, 'Passagier was niet geinitialiseerd bij de aanroep van addPassagier\&.'); 
.RE
.PP
\fBPostcondition:\fP
.RS 4
ENSURE(bevatPassagier(pas), 'Passagier was niet toegevoegd bij aanroep van addPassagier\&.'); 
.RE
.PP

.SS "void Metronet::addSpoor (int spoor)"

.PP
Voegt spoor toe aan metronet\&. 
.PP
\fBParameters:\fP
.RS 4
\fIspoor\fP Het spoor dat toegevoegd zal worden\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij de aanroep van addSpoor\&.'); 
.RE
.PP
\fBPostcondition:\fP
.RS 4
ENSURE(bevatSpoor(spoor), 'Spoor was niet toegevoegd bij de aanroep van addSpoor\&.'); 
.RE
.PP

.SS "void Metronet::addStation (std::string naam, std::string type, std::map< int, std::string > vorigeStations, std::map< int, std::string > volgendeStations)"

.PP
Voegt station toe aan metronet\&. 
.PP
\fBParameters:\fP
.RS 4
\fIstation\fP Het station dat toegevoegd zal worden\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij de aanroep van addStation\&.'); 
.PP
REQUIRE(station->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij de aanroep van addStation\&.'); 
.RE
.PP
\fBPostcondition:\fP
.RS 4
ENSURE(bevatStation(station), 'Station was niet toegevoegd bij de aanroep van addStation\&.'); 
.RE
.PP

.SS "void Metronet::addTram (int zitplaatsen, int snelheid, int spoor, int voertuigNr, std::string type, std::string beginStation)"

.PP
Voegt tram toe aan metronet\&. 
.PP
\fBParameters:\fP
.RS 4
\fItram\fP De tram die toegevoegd zal worden\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij de aanroep van addTram\&.'); 
.PP
REQUIRE(tram->\fBproperlyInitialised()\fP, 'Tram was niet geinitialiseerd bij de aanroep van addTram\&.'); 
.RE
.PP
\fBPostcondition:\fP
.RS 4
ENSURE(bevatTram(tram), 'Tram was niet toegevoegd bij de aanroep van addTram\&.'); 
.RE
.PP

.SS "bool Metronet::bevatPassagier (\fBPassagier\fP * pas)"

.PP
Kijkt na of het metronet de opgegeven passagier bevat\&. 
.PP
\fBParameters:\fP
.RS 4
\fIpas\fP De passagier die gezocht moet worden\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Boolean die aangeeft of het metronet de passagier bevat\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij de aanroep van bevatPassagier\&.'); 
.PP
REQUIRE(pas->\fBproperlyInitialised()\fP, 'Passagier was niet geinitialiseerd bij de aanroep van bevatPassagier\&.'); 
.RE
.PP

.SS "bool Metronet::bevatSpoor (int spoor)"

.PP
Kijkt na of het metronet de opgegeven tram bevat\&. 
.PP
\fBParameters:\fP
.RS 4
\fItram\fP Het spoor dat moet gezocht worden\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Boolean die aangeeft of het metronet de tram bevat\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij de aanroep van bevatSpoor\&.'); 
.RE
.PP

.SS "bool Metronet::bevatStation (\fBStation\fP * station)"

.PP
Kijkt na of het metronet de opgegeven tram bevat\&. 
.PP
\fBParameters:\fP
.RS 4
\fItram\fP De tram die moet gezocht worden\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Boolean die aangeeft of het metronet de tram bevat\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(station->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij aanroep van bevatStation\&.'); 
.PP
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij de aanroep van bevatStation\&.'); 
.PP
REQUIRE(station->\fBproperlyInitialised()\fP, 'Station was niet geinitialiseerd bij de aanroep van bevatStation\&.'); 
.RE
.PP

.SS "bool Metronet::bevatTram (\fBTram\fP * tram)"

.PP
Kijkt na of het metronet de opgegeven tram bevat\&. 
.PP
\fBParameters:\fP
.RS 4
\fItram\fP De tram die moet gezocht worden\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Boolean die aangeeft of het metronet de tram bevat\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(tram->\fBproperlyInitialised()\fP, 'Tram was niet geinitialiseerd bij aanroep van bevatTram\&.'); 
.PP
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij de aanroep van bevatTram\&.'); 
.RE
.PP

.SS "bool Metronet::checkConsistent (std::ostream & os)"

.PP
Kijkt na of het metronet consistent is\&. 
.PP
\fBParameters:\fP
.RS 4
\fIos\fP De stream waar de output naar gestuurd zal worden\&. 
.RE
.PP
\fBReturns:\fP
.RS 4
Boolean die aangeeft of het \fBMetronet\fP consistent is\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij de aanroep van checkConsistent\&.'); 
.RE
.PP

.SS "std::map< std::string, \fBPassagier\fP * > & Metronet::getPassagiers ()"

.PP
Geeft alle passagiers in het metronet terug\&. 
.PP
\fBReturns:\fP
.RS 4
Map met alle passagiers in het metronet\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij de aanroep van getPassagiers\&.'); 
.RE
.PP

.SS "std::map< std::string, \fBStation\fP * > Metronet::getStations ()"

.PP
Geeft alle stations in het metronet terug\&. 
.PP
\fBReturns:\fP
.RS 4
Map met stations in het metronet\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij de aanroep van getStations\&.'); 
.RE
.PP

.SS "std::map< int, \fBTram\fP * > & Metronet::getTrams ()"

.PP
Geeft alle trams in het metronet terug\&. 
.PP
\fBReturns:\fP
.RS 4
Map met trams in het metronet\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij de aanroep van getTrams\&.'); 
.RE
.PP

.SS "\fBMetronet\fP & Metronet::operator= (const \fBMetronet\fP & rhs)"

.PP
De overload van de = operator van de klasse \fBMetronet\fP\&. 
.PP
\fBParameters:\fP
.RS 4
\fIrhs\fP Het metronet waaran this gelijk gezet zal worden 
.RE
.PP
\fBReturns:\fP
.RS 4
Het huidig metronet dat gelijk wordt gezet aan rhs 
.RE
.PP

.SS "int Metronet::opstappenAfstappen (\fBTram\fP * tram, std::ostream & os)"

.PP
Behandelt het opstappen en afstappen van passagiers\&. 
.PP
\fBParameters:\fP
.RS 4
\fItram\fP De tram waar mensen opstappen en afstappen\&. 
.br
\fIos\fP De stream waar de output naar gestuurd zal worden\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij aanroep van opstappenAfstappen\&.'); 
.PP
REQUIRE(tram->\fBproperlyInitialised()\fP, 'Tram was niet geinitialiseerd bij aanroep van opstappenAfstappen\&.'); 
.PP
REQUIRE(trams\&.find(tram->getVoertuignummer()) != trams\&.end(), 'Tram bestaat niet in het metronet\&.'); 
.RE
.PP

.SS "void Metronet::printMetronet (std::ostream & os)"

.PP
Print het hele metronet\&. 
.PP
\fBParameters:\fP
.RS 4
\fIos\fP De stream waar de output naar gestuurd moet worden 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij aanroep van printMetronet\&.'); 
.RE
.PP

.SS "bool Metronet::properlyInitialised ()"

.PP
Kijk na of de constructor in de juiste staat geeindigd is\&. 
.PP
\fBReturns:\fP
.RS 4
Boolean die aangeeft of het object juist geinitialiseerd is\&. 
.RE
.PP

.SS "void Metronet::reset ()"

.PP
Reset heel het systeem\&. 
.PP
\fBParameters:\fP
.RS 4
\fItram\fP De tram waarvoor gekeken wordt of vertrokken mag worden\&. 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij aanroep van reset\&.'); 
.RE
.PP

.SS "void Metronet::rondrijden (std::ostream & os)"

.PP
Emuleert het rondrijden van trams\&. 
.PP
\fBParameters:\fP
.RS 4
\fIos\fP De stream waar de output naar gestuurd moet worden 
.RE
.PP
\fBPrecondition:\fP
.RS 4
REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij aanroep van rondrijden\&.'); 
.RE
.PP
\fBPostcondition:\fP
.RS 4
(voor elke tram) ENSURE(t->getHuidigStation() == t->getBeginStation(), 'Tram niet geëindigd in beginstation na rondrijden\&.'); 
.RE
.PP

.SS "bool Metronet::tramMagVertrekken (\fBTram\fP * tram)"

.PP
Kijkt of de gegeven tram verder mag rijden\&. 
.PP
\fBReturns:\fP
.RS 4
Boolean die aangeeft of een tram mag vertrekken /pre REQUIRE(this->\fBproperlyInitialised()\fP, 'Metronet was niet geinitialiseerd bij aanroep van tramMagVertrekken\&.'); /pre REQUIRE(tram->\fBproperlyInitialised()\fP, 'Tram was niet geinitialiseerd bij het aanroepen van tramMagVertrekken\&.'); 
.RE
.PP


.SH "Author"
.PP 
Generated automatically by Doxygen for Metronet from the source code\&.
