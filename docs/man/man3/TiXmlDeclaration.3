.TH "TiXmlDeclaration" 3 "Thu Mar 9 2017" "Metronet" \" -*- nroff -*-
.ad l
.nh
.SH NAME
TiXmlDeclaration
.SH SYNOPSIS
.br
.PP
.PP
\fC#include <tinyxml\&.h>\fP
.PP
Inherits \fBTiXmlNode\fP\&.
.SS "Public Member Functions"

.in +1c
.ti -1c
.RI "\fBTiXmlDeclaration\fP ()"
.br
.RI "Construct an empty declaration\&. "
.ti -1c
.RI "\fBTiXmlDeclaration\fP (const char *_version, const char *_encoding, const char *_standalone)"
.br
.RI "Construct\&. "
.ti -1c
.RI "\fBTiXmlDeclaration\fP (const \fBTiXmlDeclaration\fP &copy)"
.br
.ti -1c
.RI "\fBTiXmlDeclaration\fP & \fBoperator=\fP (const \fBTiXmlDeclaration\fP &copy)"
.br
.ti -1c
.RI "virtual \fB~TiXmlDeclaration\fP ()"
.br
.ti -1c
.RI "const char * \fBVersion\fP () const"
.br
.RI "Version\&. Will return an empty string if none was found\&. "
.ti -1c
.RI "const char * \fBEncoding\fP () const"
.br
.RI "Encoding\&. Will return an empty string if none was found\&. "
.ti -1c
.RI "const char * \fBStandalone\fP () const"
.br
.RI "Is this a standalone document? "
.ti -1c
.RI "virtual \fBTiXmlNode\fP * \fBClone\fP () const"
.br
.RI "Creates a copy of this Declaration and returns it\&. "
.ti -1c
.RI "virtual void \fBPrint\fP (FILE *cfile, int depth, \fBTIXML_STRING\fP *str) const"
.br
.ti -1c
.RI "virtual void \fBPrint\fP (FILE *cfile, int depth) const"
.br
.ti -1c
.RI "virtual const char * \fBParse\fP (const char *p, \fBTiXmlParsingData\fP *data, \fBTiXmlEncoding\fP encoding)"
.br
.ti -1c
.RI "virtual const \fBTiXmlDeclaration\fP * \fBToDeclaration\fP () const"
.br
.RI "Cast to a more defined type\&. Will return null not of the requested type\&. "
.ti -1c
.RI "virtual \fBTiXmlDeclaration\fP * \fBToDeclaration\fP ()"
.br
.RI "Cast to a more defined type\&. Will return null not of the requested type\&. "
.ti -1c
.RI "virtual bool \fBAccept\fP (\fBTiXmlVisitor\fP *visitor) const"
.br
.in -1c
.SS "Protected Member Functions"

.in +1c
.ti -1c
.RI "void \fBCopyTo\fP (\fBTiXmlDeclaration\fP *target) const"
.br
.in -1c
.SS "Additional Inherited Members"
.SH "Detailed Description"
.PP 
In correct XML the declaration is the first entry in the file\&. 
.PP
.nf
    <?xml version="1.0" standalone="yes"?>

.fi
.PP
.PP
TinyXml will happily read or write files without a declaration, however\&. There are 3 possible attributes to the declaration: version, encoding, and standalone\&.
.PP
Note: In this version of the code, the attributes are handled as special cases, not generic attributes, simply because there can only be at most 3 and they are always the same\&. 
.SH "Constructor & Destructor Documentation"
.PP 
.SS "TiXmlDeclaration::TiXmlDeclaration ()\fC [inline]\fP"

.PP
Construct an empty declaration\&. 
.SS "TiXmlDeclaration::TiXmlDeclaration (const char * _version, const char * _encoding, const char * _standalone)"

.PP
Construct\&. 
.SS "TiXmlDeclaration::TiXmlDeclaration (const \fBTiXmlDeclaration\fP & copy)"

.SS "virtual TiXmlDeclaration::~TiXmlDeclaration ()\fC [inline]\fP, \fC [virtual]\fP"

.SH "Member Function Documentation"
.PP 
.SS "bool TiXmlDeclaration::Accept (\fBTiXmlVisitor\fP * visitor) const\fC [virtual]\fP"
Walk the XML tree visiting this node and all of its children\&. 
.PP
Implements \fBTiXmlNode\fP\&.
.SS "\fBTiXmlNode\fP * TiXmlDeclaration::Clone () const\fC [virtual]\fP"

.PP
Creates a copy of this Declaration and returns it\&. 
.PP
Implements \fBTiXmlNode\fP\&.
.SS "void TiXmlDeclaration::CopyTo (\fBTiXmlDeclaration\fP * target) const\fC [protected]\fP"

.SS "const char* TiXmlDeclaration::Encoding () const\fC [inline]\fP"

.PP
Encoding\&. Will return an empty string if none was found\&. 
.SS "\fBTiXmlDeclaration\fP & TiXmlDeclaration::operator= (const \fBTiXmlDeclaration\fP & copy)"

.SS "const char * TiXmlDeclaration::Parse (const char * p, \fBTiXmlParsingData\fP * data, \fBTiXmlEncoding\fP encoding)\fC [virtual]\fP"

.PP
Implements \fBTiXmlBase\fP\&.
.SS "void TiXmlDeclaration::Print (FILE * cfile, int depth, \fBTIXML_STRING\fP * str) const\fC [virtual]\fP"

.SS "virtual void TiXmlDeclaration::Print (FILE * cfile, int depth) const\fC [inline]\fP, \fC [virtual]\fP"
All TinyXml classes can print themselves to a filestream or the string class (\fBTiXmlString\fP in non-STL mode, std::string in STL mode\&.) Either or both cfile and str can be null\&.
.PP
This is a formatted print, and will insert tabs and newlines\&.
.PP
(For an unformatted stream, use the << operator\&.) 
.PP
Implements \fBTiXmlBase\fP\&.
.SS "const char* TiXmlDeclaration::Standalone () const\fC [inline]\fP"

.PP
Is this a standalone document? 
.SS "virtual const \fBTiXmlDeclaration\fP* TiXmlDeclaration::ToDeclaration () const\fC [inline]\fP, \fC [virtual]\fP"

.PP
Cast to a more defined type\&. Will return null not of the requested type\&. 
.PP
Reimplemented from \fBTiXmlNode\fP\&.
.SS "virtual \fBTiXmlDeclaration\fP* TiXmlDeclaration::ToDeclaration ()\fC [inline]\fP, \fC [virtual]\fP"

.PP
Cast to a more defined type\&. Will return null not of the requested type\&. 
.PP
Reimplemented from \fBTiXmlNode\fP\&.
.SS "const char* TiXmlDeclaration::Version () const\fC [inline]\fP"

.PP
Version\&. Will return an empty string if none was found\&. 

.SH "Author"
.PP 
Generated automatically by Doxygen for Metronet from the source code\&.
